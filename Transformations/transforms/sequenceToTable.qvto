modeltype SequenceDiagram uses 'interactionMetamodel';
modeltype InteractionTable uses 'interactionTable';

transformation sequenceDiagramToTable(in seqDiagram : SequenceDiagram, out interactionTable : InteractionTable);

main() {
	seqDiagram.objectsOfType(Interaction).map transformInteraction();
}


mapping Interaction::transformInteraction() : Scenario {
	communications += self.messages.map transformMessage();
	
}

mapping Message::transformMessage() : Communication
	disjuncts 
		Message::transformMessageToSysCom,
		Message::transformMessageToUserCom;
		

mapping Message::transformMessageToSysCom() : SystemCommunication 
	when {
		self.messageSort = MessageSort::synchCall
	}{
	
}

mapping Message::transformMessageToUserCom() : UserCommunication
	when {
		self.messageSort = MessageSort::asynchCall
	} {
	
	message := object UserMessage {
		
	}
		
}


