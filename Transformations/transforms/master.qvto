import sequenceToTable;
import tableToBehaviour;
import behaviourToAutomaton;
import automatonToUML;

modeltype InteractionTable uses 'interactionTable';
modeltype BehaviourTable uses 'behaviourTable';
modeltype Automaton uses 'ioAutomaton';
modeltype UML uses uml('http://www.eclipse.org/uml2/5.0.0/UML');

transformation master(in sequenceDiagram : UML, out stateDiagram : UML)
	access transformation sequenceDiagramToTable(in seq : UML, out interaction : InteractionTable)
	access transformation interactionToBehaviourTable(in interaction : InteractionTable, out behaviour : BehaviourTable)
	access transformation behaviourToAutomaton(in behaviour : BehaviourTable, out automaton : Automaton)
	access transformation automatonToUML(in automaton : Automaton, out stateDiagram : UML);
	

main() {

	var interactionTable := InteractionTable.createEmptyModel();
	var behaviourTable := BehaviourTable.createEmptyModel();
	var automaton := Automaton.createEmptyModel();
	
	var sequenceToTable := new sequenceDiagramToTable(sequenceDiagram,interactionTable);
	var tableToBehaviour := new interactionToBehaviourTable(interactionTable,behaviourTable);
	var behToAutomaton := new behaviourToAutomaton(behaviourTable,automaton);
	var autToUML := new automatonToUML(automaton,stateDiagram);
	
	sequenceToTable.transform();
	tableToBehaviour.transform();
	behToAutomaton.transform();
	autToUML.transform();

}
